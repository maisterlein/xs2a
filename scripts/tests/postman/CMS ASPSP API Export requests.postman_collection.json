{
	"info": {
		"_postman_id": "9d7f21f0-4839-48c7-8817-6e869b8c8dca",
		"name": "CMS ASPSP API Export requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AIS",
			"item": [
				{
					"name": "1. Creates AIS consent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "6f709a09-78fc-40ce-8274-dc29bbcd560e",
								"exec": [
									"pm.globals.unset(\"redirect_id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "27c858ba-9ceb-426a-8e5d-438f019c0598",
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Consent status is received\", () => {",
									"    pm.expect(jsonData.consentStatus).to.eql('received');",
									"});",
									"",
									"const scaRedirectParts = jsonData._links.updatePsuAuthentication.href.split('/');",
									"const redirectId = scaRedirectParts.pop() || scaRedirectParts.pop();",
									"pm.globals.set(\"redirect_id\", redirectId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "date",
								"value": "Sun, 11 Aug 2019 15:02:37 GMT"
							},
							{
								"key": "tpp-qwac-certificate",
								"value": "qwac certificate"
							},
							{
								"key": "x-request-id",
								"value": "{{x_request_id}}"
							},
							{
								"key": "PSU-ID",
								"value": "{{psu_id_none}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"access\": {\n        \"accounts\": [\n            {\n                \"currency\": \"EUR\",\n                \"iban\": \"LU280019400644750000\"\n            }\n        ],\n        \"balances\": [\n            {\n                \"currency\": \"EUR\",\n                \"iban\": \"LU280019400644750000\"\n            }\n        ],\n        \"transactions\": [\n            {\n                \"currency\": \"EUR\",\n                \"iban\": \"LU280019400644750000\"\n            }\n        ]\n    },\n    \"combinedServiceIndicator\": false,\n    \"frequencyPerDay\": 400,\n    \"recurringIndicator\": true,\n    \"validUntil\": \"9999-12-31\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/consents",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"consents"
							]
						},
						"description": "This method create a consent resource, defining access rights to dedicated accounts of a given PSU-ID. These accounts are addressed explicitly in the method as parameters as a core function. Side Effects When this Consent Request is a request where the “recurringIndicator” equals \"true\", and if it exists already a former consent for recurring access on account information for the addressed PSU, then the former consent automatically expires as soon as the new consent request is authorised by the PSU. Optional Extension: As an option, an ASPSP might optionally accept a specific access right on the access on all psd2 related services for all available accounts. As another option an ASPSP might optionally also accept a command, where only access rights are inserted without mentioning the addressed account. The relation to accounts is then handled afterwards between PSU and ASPSP. This option is supported only within the Decoupled, OAuth2 or Re-direct SCA Approach. As a last option, an ASPSP might in addition accept a command with access rights * to see the list of available payment accounts or * to see the list of available payment accounts with balances."
					},
					"response": []
				},
				{
					"name": "2. Get consent response object by redirect id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5bf291c-591b-452c-9609-537cd0cb7050",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"const consentId = jsonData.accountConsent.id;",
									"pm.globals.set(\"consent_id\", consentId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39c392a0-5596-483d-97c9-dd88f0c154b4",
								"exec": [
									"pm.globals.unset(\"consent_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/psu-api/v1/ais/consent/redirect/{{redirect_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"psu-api",
								"v1",
								"ais",
								"consent",
								"redirect",
								"{{redirect_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Export AIS consents by PSU",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3fc4e0ae-01a7-4e91-826a-f200e684188d",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Consent is present\", () => {",
									"    const consent = jsonData.find(consent => {",
									"        return consent.id === pm.globals.get(\"consent_id\");",
									"    });",
									"    pm.expect(consent).not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "PSU-ID",
								"value": "{{psu_id_none}}",
								"type": "text"
							},
							{
								"key": "PSU-ID-Type",
								"value": "some type",
								"type": "text",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID- Type",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Start-Date",
								"value": "2019-01-17",
								"type": "text",
								"disabled": true
							},
							{
								"key": "End-Date",
								"value": "2019-01-16",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"value": "UNDEFINED",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/ais/consents/psu",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"ais",
								"consents",
								"psu"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Export AIS consents by TPP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4f59f5dd-041d-42be-92ed-fe274441dc35",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Consent is present\", () => {",
									"    const consent = jsonData.find(consent => {",
									"        return consent.id === pm.globals.get(\"consent_id\");",
									"    });",
									"    pm.expect(consent).not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "PSU-ID",
								"value": "{{psu_id_none}}",
								"type": "text",
								"disabled": true
							},
							{
								"key": "PSU-ID-Type",
								"value": "some type",
								"type": "text",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID- Type",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Start-Date",
								"value": "2019-01-01",
								"type": "text",
								"disabled": true
							},
							{
								"key": "End-Date",
								"value": "2019-01-16",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"value": "UNDEFINED",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/ais/consents/tpp/{{tpp_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"ais",
								"consents",
								"tpp",
								"{{tpp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Export AIS consents by ASPSP account ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8963198-16f3-488f-8500-a7b08aa353e9",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Start-Date",
								"type": "text",
								"value": "2019-01-01",
								"disabled": true
							},
							{
								"key": "End-Date",
								"type": "text",
								"value": "2019-01-16",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"type": "text",
								"value": "UNDEFINED",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/ais/consents/account/{{aspsp_account_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"ais",
								"consents",
								"account",
								"{{aspsp_account_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PIS",
			"item": [
				{
					"name": "1. Initiate payment",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96d686a3-5f56-4cd2-b043-50dc3bf36d7c",
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Transaction status is RCVD\", () => {",
									"    pm.expect(jsonData.transactionStatus).to.eql('RCVD');",
									"});",
									"",
									"const scaRedirectParts = jsonData._links.updatePsuAuthentication.href.split('/');",
									"const redirectId = scaRedirectParts.pop() || scaRedirectParts.pop();",
									"pm.globals.set(\"redirect_id\", redirectId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b4cbc456-5fd9-4fd5-a8cc-c601b228c824",
								"exec": [
									"pm.globals.unset(\"redirect_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-IP-Address",
								"value": "{{ip_address}}"
							},
							{
								"key": "X-Request-ID",
								"value": "{{x_request_id}}"
							},
							{
								"key": "TPP-Explicit-Authorisation-Preferred",
								"type": "text",
								"value": "true"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_none}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"endToEndIdentification\": \"RI-1234567890\",\n\"debtorAccount\": {\n  \"currency\": \"EUR\",\n  \"iban\": \"LU280019400644750000\"\n },\n\"instructedAmount\": {\n  \"amount\": 1000,\n  \"currency\": \"EUR\"\n },\n\"creditorAccount\": {\n  \"currency\": \"EUR\",\n  \"iban\": \"LU280019400644750000\"\n },\n\"creditorAgent\": \"AAAADEBBXXX\",\n\"creditorName\": \"Telekom\",\n \"creditorAddress\": {\n  \"buildingNumber\": \"123-34\",\n  \"city\": \"Nürnberg\",\n  \"country\": \"DE\",\n  \"postalCode\": 90431,\n  \"street\": \"Herrnstraße\"\n },\n \"remittanceInformationUnstructured\": \"Ref. Number TELEKOM-1222\"\n }"
						},
						"url": {
							"raw": "{{protocol}}://{{url_xs2a}}/v1/{{payment_service}}/{{payment_product}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_xs2a}}"
							],
							"path": [
								"v1",
								"{{payment_service}}",
								"{{payment_product}}"
							]
						},
						"description": "This method is used to initiate a payment at the ASPSP.  ## Variants of Payment Initiation Requests  This method to initiate a payment initiation at the ASPSP can be sent with either a JSON body or an pain.001 body depending on the payment product in the path.  There are the following **payment products**:    - Payment products with payment information in *JSON* format:     - ***sepa-credit-transfers***     - ***instant-sepa-credit-transfers***     - ***target-2-payments***     - ***cross-border-credit-transfers***   - Payment products with payment information in *pain.001* XML format:     - ***pain.001-sepa-credit-transfers***     - ***pain.001-instant-sepa-credit-transfers***     - ***pain.001-target-2-payments***     - ***pain.001-cross-border-credit-transfers***  Furthermore the request body depends on the **payment-service**   * ***payments***: A single payment initiation request.   * ***bulk-payments***: A collection of several payment iniatiation requests.        In case of a *pain.001* message there are more than one payments contained in the *pain.001 message.          In case of a *JSON* there are several JSON payment blocks contained in a joining list.   * ***periodic-payments***:      Create a standing order initiation resource for recurrent i.e. periodic payments addressable under {paymentId}       with all data relevant for the corresponding payment product and the execution of the standing order contained in a JSON body.   This is the first step in the API to initiate the related recurring/periodic payment.    ## Single and mulitilevel SCA Processes  The Payment Initiation Requests are independent from the need of one ore multilevel  SCA processing, i.e. independent from the number of authorisations needed for the execution of payments.   But the response messages are specific to either one SCA processing or multilevel SCA processing.   For payment initiation with multilevel SCA, this specification requires an explicit start of the authorisation,  i.e. links directly associated with SCA processing like 'scaRedirect' or 'scaOAuth' cannot be contained in the  response message of a Payment Initation Request for a payment, where multiple authorisations are needed.  Also if any data is needed for the next action, like selecting an SCA method is not supported in the response,  since all starts of the multiple authorisations are fully equal.  In these cases, first an authorisation sub-resource has to be generated following the 'startAuthorisation' link. "
					},
					"response": []
				},
				{
					"name": "2. Get payment response object by redirect id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f5bf291c-591b-452c-9609-537cd0cb7050",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"const paymentId = jsonData.payment.paymentId;",
									"pm.globals.set(\"payment_id\", paymentId);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "39c392a0-5596-483d-97c9-dd88f0c154b4",
								"exec": [
									"pm.globals.unset(\"payment_id\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/psu-api/v1/payment/redirect/{{redirect_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"psu-api",
								"v1",
								"payment",
								"redirect",
								"{{redirect_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Export payments by PSU",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86bab0dd-e498-46af-9e9a-4d95045a71eb",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Payment is present\", () => {",
									"    const payment = jsonData.find(payment => {",
									"        return payment.paymentId === pm.globals.get(\"payment_id\"); ",
									"    });",
									"    pm.expect(payment).not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_none}}"
							},
							{
								"key": "PSU-ID-Type",
								"type": "text",
								"value": "some type",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID- Type",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "Start-Date",
								"type": "text",
								"value": "2019-01-01",
								"disabled": true
							},
							{
								"key": "End-Date",
								"type": "text",
								"value": "2019-01-16",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"type": "text",
								"value": "UNDEFINED",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/pis/payments/psu",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"pis",
								"payments",
								"psu"
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Export payments by TPP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "93ed30d3-adab-4414-9e67-fed722ce52a3",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Payment is present\", () => {",
									"    const payment = jsonData.find(payment => {",
									"        return payment.paymentId === pm.globals.get(\"payment_id\"); ",
									"    });",
									"    pm.expect(payment).not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_none}}",
								"disabled": true
							},
							{
								"key": "PSU-ID-Type",
								"type": "text",
								"value": "some type",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID- Type",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "Start-Date",
								"type": "text",
								"value": "2019-01-01",
								"disabled": true
							},
							{
								"key": "End-Date",
								"type": "text",
								"value": "2019-01-16",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"type": "text",
								"value": "UNDEFINED",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/pis/payments/tpp/{{tpp_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"pis",
								"payments",
								"tpp",
								"{{tpp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "5. Export payments by ASPSP account ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8f657fd3-a1f8-46d0-9353-3dd20817e115",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Start-Date",
								"type": "text",
								"value": "2019-01-01",
								"disabled": true
							},
							{
								"key": "End-Date",
								"type": "text",
								"value": "2019-01-16",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"type": "text",
								"value": "UNDEFINED",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/pis/payments/account/{{aspsp_account_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"pis",
								"payments",
								"account",
								"{{aspsp_account_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PIIS",
			"item": [
				{
					"name": "1. Create PIIS consent",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8e5fd63e-5f0d-4f77-bac6-5daac4e22b5b",
								"exec": [
									"pm.globals.unset(\"consent_id\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "c974304c-f1b8-4e0b-ad13-5edfcc4011d2",
								"exec": [
									"pm.test(\"Status code is 201\", () => {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"const consentId = jsonData.consentId;",
									"pm.globals.set(\"consent_id\", consentId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_none}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accounts\": [\n    {\n      \"currency\": \"EUR\",\n      \"iban\": \"LU280019400644750000\",\n      \"aspspAccountId\": \"{{aspsp_account_id}}\"\n    }\n  ],\n  \"allowedFrequencyPerDay\": 4,\n  \"tppInfo\": {\n    \"authorisationNumber\": \"{{tpp_id}}\",\n    \"authorityId\": \"authority id\",\n    \"tppRedirectUri\": {\n      \"nokUri\": \"Nok redirect URI\",\n      \"uri\": \"Redirect URI\"\n    },\n    \"tppRoles\": [\n      \"PISP\"\n    ]\n  },\n  \"validUntil\": \"9999-10-10\"\n}"
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/piis/consents/",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"piis",
								"consents",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Export PIIS consents by PSU",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4a285434-eaf2-4c38-b984-fabd7fa7524e",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Consent is present\", () => {",
									"    const consent = jsonData.find(consent => {",
									"        return consent.id === pm.globals.get(\"consent_id\"); ",
									"    });",
									"    pm.expect(consent).not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "PSU-ID",
								"value": "{{psu_id_none}}",
								"type": "text"
							},
							{
								"key": "PSU-ID-Type",
								"value": "some type",
								"type": "text",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID- Type",
								"value": "",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Start-Date",
								"value": "2019-01-01",
								"type": "text",
								"disabled": true
							},
							{
								"key": "End-Date",
								"value": "2019-01-16",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"value": "UNDEFINED",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/piis/consents/psu",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"piis",
								"consents",
								"psu"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Export PIIS consents by TPP",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "069929dc-82a1-4c6e-8d01-edefda01ae5c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const jsonData = pm.response.json();",
									"",
									"pm.test(\"Consent is present\", () => {",
									"    const consent = jsonData.find(consent => {",
									"        return consent.id === pm.globals.get(\"consent_id\"); ",
									"    });",
									"    pm.expect(consent).not.eql(undefined);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "PSU-ID",
								"type": "text",
								"value": "{{psu_id_none}}",
								"disabled": true
							},
							{
								"key": "PSU-ID-Type",
								"type": "text",
								"value": "some type",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "PSU-Corporate-ID- Type",
								"type": "text",
								"value": "",
								"disabled": true
							},
							{
								"key": "Start-Date",
								"type": "text",
								"value": "2019-01-01",
								"disabled": true
							},
							{
								"key": "End-Date",
								"type": "text",
								"value": "2019-01-16",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"type": "text",
								"value": "UNDEFINED",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/piis/consents/tpp/{{tpp_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"piis",
								"consents",
								"tpp",
								"{{tpp_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Export PIIS consents by ASPSP account id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8c082e8-5356-46a1-b95c-4e9f403ca7ba",
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Start-Date",
								"value": "2019-02-05",
								"type": "text",
								"disabled": true
							},
							{
								"key": "End-Date",
								"value": "2019-02-05",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Instance-ID",
								"value": "UNDEFINED",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{protocol}}://{{url_cms}}/aspsp-api/v1/piis/consents/account/{{aspsp_account_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{url_cms}}"
							],
							"path": [
								"aspsp-api",
								"v1",
								"piis",
								"consents",
								"account",
								"{{aspsp_account_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}